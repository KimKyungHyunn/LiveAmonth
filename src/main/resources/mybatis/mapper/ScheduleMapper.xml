<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.liveamonth.liveamonth.model.mapper.scheduleMapper.ScheduleMapper">
	<!-- select -->
	<select id="beforeScheduleAddSearch" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleContentVO" resultType="int">
		select count(*) from scheduleContent where scheduleContentDate = #{scheduleContentDate}
	</select>

	<select id="scheduleContentList" parameterType="HashMap" resultType="com.liveamonth.liveamonth.entity.vo.ScheduleContentVO">
		select * from scheduleContent where scheduleContent.scheduleNO = #{scheduleNO} AND scheduleContentDate &gt;= #{calendarDTO.dbStartDate} and scheduleContentDate &lt;= #{calendarDTO.dbEndDate} order by scheduleContentDate, scheduleContentNO
	</select>

	<select id="getLastScheduleContentNO" resultType="int">
		select max(scheduleContentNO) from scheduleContent;
	</select>


	<select id="getMaxScheduleNO" resultType="int">
		select max(scheduleNO) from schedule;
	</select>

	<select id="getScheduleList" resultType="com.liveamonth.liveamonth.entity.vo.ScheduleVO" parameterType="int">
		select * from schedule where userNO = #{userNO};
	</select>

<!-- 	<select id="findUserIDToUserNO" resultType="int" parameterType="String">
		select userNO from user where userID = #{userID};
	</select>
	 -->
	
<!-- 	 <select id="getOtherScheduleInfo" resultType="com.liveamonth.liveamonth.entity.vo.ScheduleVO">
      select * from schedule where schedule.scheduleStatus = true order by scheduleLikeCount DESC;
    </select> -->
    
<!--     <select id="getOtherScheduleList" parameterType="HashMap" resultType="com.liveamonth.liveamonth.entity.vo.ScheduleVO">
		select * from schedule	
		<where>
		<choose>
			<when test="filter!=null">
				AND schedule.scheduleStatus = true #{filter}
			</when>
			<otherwise>
				AND schedule.scheduleStatus = true
			</otherwise>
		</choose>
		</where>

	</select>  -->
	
 	<select id="getOtherScheduleList" parameterType="HashMap" resultType="com.liveamonth.liveamonth.entity.vo.ScheduleVO">
		select * from schedule	
		<where> 
		<choose>
			<when test="filter!=null">
				AND schedule.scheduleStatus = true ${filter}
			</when>
			<otherwise>
				AND schedule.scheduleStatus = true
			</otherwise>
		</choose>
		</where>
		<trim prefix="ORDER BY"> 
			<if test="orderBy =='scheduleNO'">${orderBy} ASC</if>
<!--			<if test="orderBy =='scheduleLikeCount'">${orderBy} DESC</if>	 -->
		</trim> 	
	</select>

	<resultMap type = "java.util.HashMap" id="scheduleReplyAndNickname">
		<id column="NO" property="NO"/>
		<result column="userNickname" property="userNickname"/>
		<association property="scheduleReply" javaType="com.liveamonth.liveamonth.entity.vo.ScheduleReplyVO">
			<id column="scheduleReplyNO" property="scheduleReplyNO"/>
			<result column="scheduleReplyDesc" property="scheduleReplyDesc"/>
			<result column="scheduleReplyDate" property="scheduleReplyDate"/>
			<result column="scheduleReplyRefNO" property="scheduleReplyRefNO"/>
			<result column="userNO" property="userNO"/>
			<result column="scheduleNO" property="scheduleNO"/>
		</association>
	</resultMap>

<!--	<select id="getScheduleReplyList" parameterType="java.util.HashMap" resultMap="scheduleReplyAndNickname">-->
<!--		select scheduleReplyNO, scheduleReplyDesc, scheduleReplyDate, scheduleReplyRefNO, scheduleReply.userNO, scheduleNO, userNickname-->
<!--		from user, scheduleReply where scheduleReply.userNO = user.userNO AND scheduleReply.scheduleNO = #{scheduleNO};-->
<!--	</select>-->

	<select id="getScheduleReplyList" parameterType="java.util.HashMap" resultMap="scheduleReplyAndNickname">
		select @rownum:=@rownum+1 as NO, sortScheduleReply.* from
			(select IF(scheduleReplyRefNO >= 0, scheduleReplyRefNO, scheduleReplyNO) as sortScheduleReplyNO, scheduleReply.*, userNickName
				from scheduleReply, user where scheduleReply.userNO = user.userNO AND scheduleNO= #{scheduleNO} order by sortScheduleReplyNO, scheduleReplyNO) sortScheduleReply,
		   	(select @rownum:=#{startNO})TMP
		limit #{startNO}, 15;
	</select>

	<select id="getMaxScheduleReplyNO" resultType="int">
		select max(scheduleReplyNO) from scheduleReply;
	</select>

	<select id="getScheduleReplyCount" resultType="int">
		select count(scheduleReplyNO) as count from scheduleReply;
	</select>

	<!-- delete -->
	<delete id="deleteScheduleContent" parameterType="int">
		delete from scheduleContent where scheduleContentNO = #{scheduleContentNO}
	</delete>
	
	<delete id="deleteSchedule" parameterType="int">
		delete from schedule where scheduleNO = #{scheduleNO}
	</delete>

	<delete id="deleteScheduleReply" parameterType="int">
		delete from scheduleReply where scheduleReplyNO = #{scheduleReplyNO}
	</delete>

	<!-- insert -->

	<insert id="addSchedule" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleVO">
		insert into schedule values(#{scheduleNO}, #{scheduleSubject}, #{scheduleStatus}, #{schedulePlace},#{scheduleViewCount},#{userNO})
	</insert>

	<insert id="addScheduleContent" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleContentVO">
		insert into scheduleContent values (#{scheduleContentNO}, #{scheduleContentSubject}, #{scheduleContentDesc}, #{scheduleContentDate}, #{scheduleContentCost}, #{scheduleNO})
	</insert>

	<insert id="addScheduleReplyVO" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleReplyVO">
		insert into scheduleReply values (#{scheduleReplyNO}, #{scheduleReplyDesc}, #{scheduleReplyDate},
		<choose>
			<when test = "scheduleReplyRefNO == 0">
				null
			</when>
			<otherwise>
				#{scheduleReplyRefNO}
			</otherwise>
		</choose>
		, #{userNO}, #{scheduleNO})
	</insert>

	<!-- update -->

	<update id="modifyScheduleContent" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleContentVO">
		update scheduleContent
		set scheduleContentSubject = #{scheduleContentSubject}, scheduleContentDesc = #{scheduleContentDesc},
		scheduleContentCost = #{scheduleContentCost}
		where scheduleContentNO = #{scheduleContentNO}
	</update>
	
	<update id="modifySchedule" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleVO">
		update schedule set scheduleSubject = #{scheduleSubject}, scheduleStatus = #{scheduleStatus}, schedulePlace = #{schedulePlace} where scheduleNO = #{scheduleNO}
	</update>

	<update id="modifyScheduleReply" parameterType="com.liveamonth.liveamonth.entity.vo.ScheduleReplyVO">
		update scheduleReply set scheduleReplyDesc = #{scheduleReplyDesc} where scheduleReplyNO = #{scheduleReplyNO}
	</update>
</mapper>